"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getExternalFile", {
    enumerable: true,
    get: function() {
        return getExternalFile;
    }
});
const _errors = require("../errors");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const getExternalFile = async ({ req, data })=>{
    const baseUrl = req.get('origin') || `${req.protocol}://${req.get('host')}`;
    const { url, filename } = data;
    if (typeof url === 'string') {
        const fileURL = `${baseUrl}${url}`;
        const { default: fetch } = await Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("node-fetch")));
        const res = await fetch(fileURL, {
            credentials: 'include',
            method: 'GET',
            headers: {
                ...req.headers
            }
        });
        if (!res.ok) throw new _errors.APIError(`Failed to fetch file from ${fileURL}`, res.status);
        const data = await res.buffer();
        return {
            name: filename,
            data,
            mimetype: res.headers.get('content-type') || undefined,
            size: Number(res.headers.get('content-length')) || 0
        };
    }
    throw new _errors.APIError('Invalid file url', 400);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91cGxvYWRzL2dldEV4dGVybmFsRmlsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEZpbGUsIEZpbGVEYXRhIH0gZnJvbSAnLi90eXBlcydcbmltcG9ydCB7IFJlcXVlc3QgfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHsgQVBJRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMnXG5cbnR5cGUgQXJncyA9IHtcbiAgcmVxOiBSZXF1ZXN0XG4gIGRhdGE6IEZpbGVEYXRhXG59XG5leHBvcnQgY29uc3QgZ2V0RXh0ZXJuYWxGaWxlID0gYXN5bmMgKHsgcmVxLCBkYXRhIH06IEFyZ3MpOiBQcm9taXNlPEZpbGU+ID0+IHtcbiAgY29uc3QgYmFzZVVybCA9IHJlcS5nZXQoJ29yaWdpbicpIHx8IGAke3JlcS5wcm90b2NvbH06Ly8ke3JlcS5nZXQoJ2hvc3QnKX1gXG4gIGNvbnN0IHsgdXJsLCBmaWxlbmFtZSB9ID0gZGF0YVxuXG4gIGlmICh0eXBlb2YgdXJsID09PSAnc3RyaW5nJykge1xuICAgIGNvbnN0IGZpbGVVUkwgPSBgJHtiYXNlVXJsfSR7dXJsfWBcbiAgICBjb25zdCB7IGRlZmF1bHQ6IGZldGNoIH0gPSAoYXdhaXQgaW1wb3J0KCdub2RlLWZldGNoJykpIGFzIGFueVxuXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goZmlsZVVSTCwge1xuICAgICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIC4uLnJlcS5oZWFkZXJzLFxuICAgICAgfSxcbiAgICB9KVxuXG4gICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBBUElFcnJvcihgRmFpbGVkIHRvIGZldGNoIGZpbGUgZnJvbSAke2ZpbGVVUkx9YCwgcmVzLnN0YXR1cylcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuYnVmZmVyKClcblxuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBmaWxlbmFtZSxcbiAgICAgIGRhdGEsXG4gICAgICBtaW1ldHlwZTogcmVzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKSB8fCB1bmRlZmluZWQsXG4gICAgICBzaXplOiBOdW1iZXIocmVzLmhlYWRlcnMuZ2V0KCdjb250ZW50LWxlbmd0aCcpKSB8fCAwLFxuICAgIH1cbiAgfVxuXG4gIHRocm93IG5ldyBBUElFcnJvcignSW52YWxpZCBmaWxlIHVybCcsIDQwMClcbn1cbiJdLCJuYW1lcyI6WyJnZXRFeHRlcm5hbEZpbGUiLCJyZXEiLCJkYXRhIiwiYmFzZVVybCIsImdldCIsInByb3RvY29sIiwidXJsIiwiZmlsZW5hbWUiLCJmaWxlVVJMIiwiZGVmYXVsdCIsImZldGNoIiwicmVzIiwiY3JlZGVudGlhbHMiLCJtZXRob2QiLCJoZWFkZXJzIiwib2siLCJBUElFcnJvciIsInN0YXR1cyIsImJ1ZmZlciIsIm5hbWUiLCJtaW1ldHlwZSIsInVuZGVmaW5lZCIsInNpemUiLCJOdW1iZXIiXSwibWFwcGluZ3MiOiI7Ozs7K0JBUWFBOzs7ZUFBQUE7Ozt3QkFOWTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1sQixNQUFNQSxrQkFBa0IsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBUTtJQUN2RCxNQUFNQyxVQUFVRixJQUFJRyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUVILElBQUlJLFFBQVEsQ0FBQyxHQUFHLEVBQUVKLElBQUlHLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDM0UsTUFBTSxFQUFFRSxHQUFHLEVBQUVDLFFBQVEsRUFBRSxHQUFHTDtJQUUxQixJQUFJLE9BQU9JLFFBQVEsVUFBVTtRQUMzQixNQUFNRSxVQUFVLENBQUMsRUFBRUwsUUFBUSxFQUFFRyxJQUFJLENBQUM7UUFDbEMsTUFBTSxFQUFFRyxTQUFTQyxLQUFLLEVBQUUsR0FBSSxNQUFNLG1FQUFBLFFBQU87UUFFekMsTUFBTUMsTUFBTSxNQUFNRCxNQUFNRixTQUFTO1lBQy9CSSxhQUFhO1lBQ2JDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxHQUFHYixJQUFJYSxPQUFPO1lBQ2hCO1FBQ0Y7UUFFQSxJQUFJLENBQUNILElBQUlJLEVBQUUsRUFBRSxNQUFNLElBQUlDLGdCQUFRLENBQUMsQ0FBQywwQkFBMEIsRUFBRVIsUUFBUSxDQUFDLEVBQUVHLElBQUlNLE1BQU07UUFFbEYsTUFBTWYsT0FBTyxNQUFNUyxJQUFJTyxNQUFNO1FBRTdCLE9BQU87WUFDTEMsTUFBTVo7WUFDTkw7WUFDQWtCLFVBQVVULElBQUlHLE9BQU8sQ0FBQ1YsR0FBRyxDQUFDLG1CQUFtQmlCO1lBQzdDQyxNQUFNQyxPQUFPWixJQUFJRyxPQUFPLENBQUNWLEdBQUcsQ0FBQyxzQkFBc0I7UUFDckQ7SUFDRjtJQUVBLE1BQU0sSUFBSVksZ0JBQVEsQ0FBQyxvQkFBb0I7QUFDekMifQ==